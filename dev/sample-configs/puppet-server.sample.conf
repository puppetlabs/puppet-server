global: {
    logging-config: ./dev/logback-dev.xml
    allow-header-cert-info: false
}

product: {
    name: {group-id: puppetlabs
           artifact-id: puppet-server}
}

os-settings: {
    ruby-load-path: [./ruby/puppet/lib, ./ruby/facter/lib]
}

webserver: {
    client-auth: want
    # ssl-host controls what networks the server will accept connections from.
    # The default value below is 'localhost', so will only accept connections from
    # processes on the same operating system instance, e.g. a local puppet agent.
    # To support both local and remote puppet agents, use:
    #ssl-host: 0.0.0.0
    ssl-host: localhost
    ssl-port: 8140
}

# configuration for the JRuby interpreters
jruby-puppet: {
    # This setting determines where JRuby will look for gems.  It is also
    # used by the `puppetserver gem` command line tool.
    gem-home: ./target/jruby-gems

    # (optional) path to puppet conf dir; if not specified, will use the puppet default
    #master-conf-dir: /etc/puppet

    # (optional) path to puppet var dir; if not specified, will use the puppet default
    #master-var-dir: /var/lib/puppet

    # (optional) maximum number of JRuby instances to allow; defaults to <num-cpus>+2
    max-active-instances: 1
}

# settings related to profiling the puppet Ruby code
profiler: {
    # enable or disable profiling for the Ruby code; defaults to 'false'.
    enabled: true
}

# CA-related settings
certificate-authority: {

    # settings for the certificate_status HTTP endpoint
    certificate-status: {

        # this setting contains a list of client certnames who are whitelisted to
        # have access to the certificate_status endpoint.  Any requests made to
        # this endpoint that do not present a valid client cert mentioned in
        # this list will be denied access.
        client-whitelist: []
    }
}
